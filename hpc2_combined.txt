#include<iostream>
#include<stdlib.h>
#include<omp.h>
using namespace std;

void bubble(int *, int);
void swap(int &, int &);


void bubble(int *a, int n)
{
    for(  int i = 0;  i < n;  i++ )
     {  	 
   	 int first = i % 2; 	 

   	 #pragma omp parallel for shared(a,first)
   	 for(  int j = first;  j < n-1;  j += 2  )
   	   {  	 
   		 if(  a[ j ]  >  a[ j+1 ]  )
   		  {  	 
     			 swap(  a[ j ],  a[ j+1 ]  );
   		  }  	 
   		   }  	 
     }
}


void swap(int &a, int &b)
{

    int test;
    test=a;
    a=b;
    b=test;

}

void mergesort(int b[],int i,int j);
void merge(int b[],int i1,int j1,int i2,int j2);

void mergesort(int b[],int i,int j)
{
	int mid;
	if(i<j)
	{
    	mid=(i+j)/2;
   	 
    	#pragma omp parallel sections
    	{

        	#pragma omp section
        	{
            	mergesort(b,i,mid);   	 
        	}

        	#pragma omp section
        	{
            	mergesort(b,mid+1,j);    
        	}
    	}

    	merge(b,i,mid,mid+1,j);    
	}

}
 
void merge(int b[],int i1,int j1,int i2,int j2)
{
	int temp[1000];    
	int i,j,k;
	i=i1;    
	j=i2;    
	k=0;
    
	while(i<=j1 && j<=j2)    
	{
    	if(b[i]<b[j])
    	{
        	temp[k++]=b[i++];
    	}
    	else
    	{
        	temp[k++]=b[j++];
    }    
	}
    
	while(i<=j1)    
	{
    	temp[k++]=b[i++];
	}
   	 
	while(j<=j2)    
	{
    	temp[k++]=b[j++];
	}
   	 
	for(i=i1,j=0;i<=j2;i++,j++)
	{
    	b[i]=temp[j];
	}    
}


int main()
{

    int *a,n;
    cout<<"\n enter total no of elements for parallel bubble sort=>";
    cin>>n;
    a=new int[n];
    cout<<"\n enter elements=>";
    for(int i=0;i<n;i++)
    {
   	 cin>>a[i];
    }
    
    bubble(a,n);
    
    cout<<"\n sorted array is=>";
    for(int i=0;i<n;i++)
    {
   	 cout<<a[i]<<endl;
    }
    int *b,s,i;
	cout<<"\n enter total no of elements for parallel merge sort =>";
	cin>>s;
	b= new int[s];

	cout<<"\n enter elements=>";
	for(i=0;i<s;i++)
	{
    	cin>>a[i];
	}
   //	 start=.......
//#pragma omp…..
	mergesort(a, 0, s-1);
//          stop…….
	cout<<"\n sorted array is=>";
	for(i=0;i<s;i++)
	{
    	cout<<"\n"<<a[i];
	}


return 0;
}